# reference: https://docs.gunicorn.org/en/latest/deploy.html
# change worker process from 1 to auto to allow nginx to run all available cores
worker_processes auto;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
# we should set up a dedicated user for running nginx.
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  # accept_mutex helps avoid race conditions and can be safely left on (default)
  accept_mutex on;
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;
  # keep alive manages persistent connections more efficiently
  keepalive_timeout 65;
  # adjust the size based on application needs
  client_max_body_size 10M;

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # upstream defines a group a servers that can live on different ports.
  upstream django_api {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    # changed name to the correct service name and port
    server backend:8000 fail_timeout=0;
  }

  # redirect all http traffic to https
  server {
    listen 80;
    server_name www.nptfisheries.org nptfisheries.org;

    location / {
      return 301 https://$host$request_uri;
    }
  }
 
  # HTTPS server block
  server {
    listen 443 ssl;
    server_name www.nptfisheries.org nptfisheries.org;

    ssl_certificate /etc/letsencrypt/live/www.nptfisheries.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.nptfisheries.org/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://dfrm-fe.s3-website-us-west-2.amazonaws.com;
        proxy_set_header Host dfrm-fe.s3-website-us-west-2.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect off;
        proxy_buffering off;

        # Increase timeout values if needed
        # proxy_connect_timeout 300;
        # proxy_send_timeout 300;
        # proxy_read_timeout 300;
        # send_timeout 300;

        # # Detailed logging
        # access_log /var/log/nginx/s3_access.log;
        # error_log /var/log/nginx/s3_error.log debug;
    }
 
    # Proxy pass for Django admin
    location /dfrm-admin/ {
      proxy_pass http://django_api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy pass for API requests to the Django backend
    location /api/v1/ {
        proxy_pass http://django_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
 
    # Uncommment to serve static files from S3 bucket
    # Our django static and media files are served by the django settings.py file
    # location /static/ {
    #   proxy_pass http://dfrm-website.s3-website-us-west-2.amazonaws.com;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # # Serve media files from S3 bucket
    # location /media/ {
    #   proxy_pass http://dfrm-website.s3-website-us-west-2.amazonaws.com;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    # }
 
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
 
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx;
      internal;
    }

    # Uncomment for detailed logging
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log debug;
  }
}